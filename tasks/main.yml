---
# tasks file for xen-orchestra

# Building xen orchestra from source
# https://xen-orchestra.com/docs/installation.html#from-the-sources

- name: installing dependencies
  become: true
  become_user: root
  block:
    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: true
        cache_valid_time: 1800

    - name: Ensure nodejs dependencies are present.
      apt:
        name:
          - apt-transport-https
          - gnupg2
        state: present

    - name: Add Nodesource apt key.
      apt_key:
        url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
        id: "68576280"
        state: present

    - name: Add NodeSource repositories for Node.js.
      apt_repository:
        repo: "{{ item }}"
        state: present
      with_items:
        - deb https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main
      register: node_repo

    - name: Update apt cache if repo was added.
      apt: update_cache=yes
      when: node_repo.changed
      tags: [skip_ansible_lint]
    - name: Ensure Node.js and npm are installed.
      apt:
        name: nodejs={{ nodejs_version|regex_replace('x', '') }}*
        state: present

    - name: install yarn via npm
      community.general.npm:
        name: yarn
        global: true
        state: present

    - name: install dependencies via apt
      apt:
        state: present
        update_cache: true
        cache_valid_time: 1800
        name: "{{ item }}"
      loop:
        - build-essential
        - cifs-utils
        - git
        - libpng-dev
        - libvhdi-utils
        - lvm2
        - python3-minimal
        - redis-server

- name: create "{{xo_user}}:{{xo_group}}" user & group
  become: true
  become_user: root
  block:
    - name: Ensure group {{xo_group}} exists with correct gid
      ansible.builtin.group:
        name: "{{xo_group}}"
        state: present
        gid: 777

    - name: Add the user "{{xo_user}}" with a specific uid and a primary group of 'admin'
      ansible.builtin.user:
        system: true
        name: "{{xo_user}}"
        comment: xen-orchestra
        createhome: false
        uid: 777
        group: "{{xo_group}}"

    - name: Create xen-orchestra directory if it does not exist
      ansible.builtin.file:
        path: "{{item}}"
        state: directory
        mode: "0750"
        owner: "{{xo_user}}"
        group: "{{xo_group}}"
      loop:
        - /etc/xo-server
        - /var/lib/xo-server
        - /root/.config
        - /root/.config/xo-server
        - "{{xo_path}}"

- name: build xen-orchestra
  become: true
  become_user: "{{xo_user}}"
  block:
    - name: checkout xen-orchestra repository
      ansible.builtin.git:
        repo: "{{xo_server}}"
        version: "{{xo_branch}}"
        dest: "{{xo_path}}"

    - name: yarn install
      community.general.yarn:
        path: "{{xo_path}}"
        state: present

    - name: yarn build
      ansible.builtin.command: yarn build
      args:
        chdir: "{{xo_path}}"

    - name: create config
      ansible.builtin.template:
        src: config.toml.j2
        dest: /etc/xo-server/config.toml
        owner: "{{xo_user}}"
        group: "{{xo_group}}"
        mode: "0640"

- name: create service
  ansible.builtin.template:
    src: templates/orchestra.service.j2
    dest: /lib/systemd/system/orchestra.service
